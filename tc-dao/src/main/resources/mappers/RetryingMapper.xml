<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.tc.dao.RetryingMapper">
    <resultMap id="BaseResultMap" type="com.yz.tc.model.Retrying">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
    <result column="error_code" jdbcType="VARCHAR" property="errorCode" />
    <result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
    <result column="doing_type" jdbcType="TINYINT" property="doingType" />
    <result column="doing_type_name" jdbcType="VARCHAR" property="doingTypeName" />
    <result column="final_result" jdbcType="TINYINT" property="finalResult" />
    <result column="retry_count" jdbcType="INTEGER" property="retryCount" />
    <result column="trade_scene_no" jdbcType="VARCHAR" property="tradeSceneNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yz.tc.model.Retrying">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, batch_no, error_code, error_msg, delete_flag, doing_type, doing_type_name, final_result, 
    retry_count, trade_scene_no, create_time, create_user, create_user_name, update_time, 
    update_user, update_user_name, is_deleted
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yz.tc.model.RetryingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tc_retrying
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yz.tc.model.RetryingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tc_retrying
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tc_retrying
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tc_retrying
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yz.tc.model.RetryingExample">
    delete from tc_retrying
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yz.tc.model.Retrying">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tc_retrying (batch_no, error_code, error_msg, 
      delete_flag, doing_type, doing_type_name, 
      final_result, retry_count, trade_scene_no, 
      create_time, create_user, create_user_name, 
      update_time, update_user, update_user_name, 
      is_deleted, content)
    values (#{batchNo,jdbcType=VARCHAR}, #{errorCode,jdbcType=VARCHAR}, #{errorMsg,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=TINYINT}, #{doingType,jdbcType=TINYINT}, #{doingTypeName,jdbcType=VARCHAR}, 
      #{finalResult,jdbcType=TINYINT}, #{retryCount,jdbcType=INTEGER}, #{tradeSceneNo,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yz.tc.model.Retrying">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tc_retrying
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchNo != null">
        batch_no,
      </if>
      <if test="errorCode != null">
        error_code,
      </if>
      <if test="errorMsg != null">
        error_msg,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="doingType != null">
        doing_type,
      </if>
      <if test="doingTypeName != null">
        doing_type_name,
      </if>
      <if test="finalResult != null">
        final_result,
      </if>
      <if test="retryCount != null">
        retry_count,
      </if>
      <if test="tradeSceneNo != null">
        trade_scene_no,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateUserName != null">
        update_user_name,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchNo != null">
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="doingType != null">
        #{doingType,jdbcType=TINYINT},
      </if>
      <if test="doingTypeName != null">
        #{doingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="finalResult != null">
        #{finalResult,jdbcType=TINYINT},
      </if>
      <if test="retryCount != null">
        #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="tradeSceneNo != null">
        #{tradeSceneNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yz.tc.model.RetryingExample" resultType="java.lang.Long">
    select count(*) from tc_retrying
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tc_retrying
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.batchNo != null">
        batch_no = #{record.batchNo,jdbcType=VARCHAR},
      </if>
      <if test="record.errorCode != null">
        error_code = #{record.errorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.errorMsg != null">
        error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="record.doingType != null">
        doing_type = #{record.doingType,jdbcType=TINYINT},
      </if>
      <if test="record.doingTypeName != null">
        doing_type_name = #{record.doingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.finalResult != null">
        final_result = #{record.finalResult,jdbcType=TINYINT},
      </if>
      <if test="record.retryCount != null">
        retry_count = #{record.retryCount,jdbcType=INTEGER},
      </if>
      <if test="record.tradeSceneNo != null">
        trade_scene_no = #{record.tradeSceneNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserName != null">
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserName != null">
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tc_retrying
    set id = #{record.id,jdbcType=BIGINT},
      batch_no = #{record.batchNo,jdbcType=VARCHAR},
      error_code = #{record.errorCode,jdbcType=VARCHAR},
      error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      doing_type = #{record.doingType,jdbcType=TINYINT},
      doing_type_name = #{record.doingTypeName,jdbcType=VARCHAR},
      final_result = #{record.finalResult,jdbcType=TINYINT},
      retry_count = #{record.retryCount,jdbcType=INTEGER},
      trade_scene_no = #{record.tradeSceneNo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tc_retrying
    set id = #{record.id,jdbcType=BIGINT},
      batch_no = #{record.batchNo,jdbcType=VARCHAR},
      error_code = #{record.errorCode,jdbcType=VARCHAR},
      error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      doing_type = #{record.doingType,jdbcType=TINYINT},
      doing_type_name = #{record.doingTypeName,jdbcType=VARCHAR},
      final_result = #{record.finalResult,jdbcType=TINYINT},
      retry_count = #{record.retryCount,jdbcType=INTEGER},
      trade_scene_no = #{record.tradeSceneNo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yz.tc.model.Retrying">
    update tc_retrying
    <set>
      <if test="batchNo != null">
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        error_code = #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="doingType != null">
        doing_type = #{doingType,jdbcType=TINYINT},
      </if>
      <if test="doingTypeName != null">
        doing_type_name = #{doingTypeName,jdbcType=VARCHAR},
      </if>
      <if test="finalResult != null">
        final_result = #{finalResult,jdbcType=TINYINT},
      </if>
      <if test="retryCount != null">
        retry_count = #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="tradeSceneNo != null">
        trade_scene_no = #{tradeSceneNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yz.tc.model.Retrying">
    update tc_retrying
    set batch_no = #{batchNo,jdbcType=VARCHAR},
      error_code = #{errorCode,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      doing_type = #{doingType,jdbcType=TINYINT},
      doing_type_name = #{doingTypeName,jdbcType=VARCHAR},
      final_result = #{finalResult,jdbcType=TINYINT},
      retry_count = #{retryCount,jdbcType=INTEGER},
      trade_scene_no = #{tradeSceneNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yz.tc.model.Retrying">
    update tc_retrying
    set batch_no = #{batchNo,jdbcType=VARCHAR},
      error_code = #{errorCode,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      doing_type = #{doingType,jdbcType=TINYINT},
      doing_type_name = #{doingTypeName,jdbcType=VARCHAR},
      final_result = #{finalResult,jdbcType=TINYINT},
      retry_count = #{retryCount,jdbcType=INTEGER},
      trade_scene_no = #{tradeSceneNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="logicalDeleteByPrimaryKey">
        UPDATE tc_retrying
        SET
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            update_user = #{updateUser,jdbcType=VARCHAR},
            update_user_name = #{updateUserName,jdbcType=VARCHAR},
            is_deleted=1
        WHERE id = #{id,jdbcType=BIGINT} 
    </update>

    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tc_retrying
        WHERE id = #{id,jdbcType=BIGINT} 
        AND is_deleted=0
        FOR UPDATE
    </select>
    
    <select id="listPageRetrying" resultMap="BaseResultMap" parameterType="com.yz.tc.req.RetryingListPageVO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tc_retrying
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="batchNo!=null and batchNo!=''">AND batch_no = #{batchNo,jdbcType=VARCHAR}</if>
            <if test="batchNoLike != null and batchNoLike != '' ">AND batch_no LIKE concat(#{batchNoLike,jdbcType=VARCHAR},'%')</if>
            <if test="batchNoList != null and batchNoList.size > 0">
                <foreach item="item" separator="," open="AND batch_no in (" close=")" collection="batchNoList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="errorCode!=null and errorCode!=''">AND error_code = #{errorCode,jdbcType=VARCHAR}</if>
            <if test="errorCodeLike != null and errorCodeLike != '' ">AND error_code LIKE concat(#{errorCodeLike,jdbcType=VARCHAR},'%')</if>
            <if test="errorCodeList != null and errorCodeList.size > 0">
                <foreach item="item" separator="," open="AND error_code in (" close=")" collection="errorCodeList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="errorMsg!=null and errorMsg!=''">AND error_msg = #{errorMsg,jdbcType=VARCHAR}</if>
            <if test="deleteFlag!=null">AND delete_flag = #{deleteFlag,jdbcType=TINYINT}</if>
            <if test="deleteFlagList != null and deleteFlagList.size > 0">
                <foreach item="item" separator="," open="AND delete_flag in (" close=")" collection="deleteFlagList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="doingType!=null">AND doing_type = #{doingType,jdbcType=TINYINT}</if>
            <if test="doingTypeList != null and doingTypeList.size > 0">
                <foreach item="item" separator="," open="AND doing_type in (" close=")" collection="doingTypeList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="doingTypeName!=null and doingTypeName!=''">AND doing_type_name = #{doingTypeName,jdbcType=VARCHAR}</if>
            <if test="doingTypeNameLike != null and doingTypeNameLike != '' ">AND doing_type_name LIKE concat(#{doingTypeNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="doingTypeNameList != null and doingTypeNameList.size > 0">
                <foreach item="item" separator="," open="AND doing_type_name in (" close=")" collection="doingTypeNameList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="finalResult!=null">AND final_result = #{finalResult,jdbcType=TINYINT}</if>
            <if test="finalResultList != null and finalResultList.size > 0">
                <foreach item="item" separator="," open="AND final_result in (" close=")" collection="finalResultList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="retryCount!=null">AND retry_count = #{retryCount,jdbcType=INTEGER}</if>
            <if test="retryCountList != null and retryCountList.size > 0">
                <foreach item="item" separator="," open="AND retry_count in (" close=")" collection="retryCountList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="content!=null and content!=''">AND content = #{content,jdbcType=LONGVARCHAR}</if>
            <if test="tradeSceneNo!=null and tradeSceneNo!=''">AND trade_scene_no = #{tradeSceneNo,jdbcType=VARCHAR}</if>
            <if test="tradeSceneNoLike != null and tradeSceneNoLike != '' ">AND trade_scene_no LIKE concat(#{tradeSceneNoLike,jdbcType=VARCHAR},'%')</if>
            <if test="tradeSceneNoList != null and tradeSceneNoList.size > 0">
                <foreach item="item" separator="," open="AND trade_scene_no in (" close=")" collection="tradeSceneNoList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="createUser!=null and createUser!=''">AND create_user = #{createUser,jdbcType=VARCHAR}</if>
            <if test="createUserLike != null and createUserLike != '' ">AND create_user LIKE concat(#{createUserLike,jdbcType=VARCHAR},'%')</if>
            <if test="createUserName!=null and createUserName!=''">AND create_user_name = #{createUserName,jdbcType=VARCHAR}</if>
            <if test="createUserNameLike != null and createUserNameLike != '' ">AND create_user_name LIKE concat(#{createUserNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateUser!=null and updateUser!=''">AND update_user = #{updateUser,jdbcType=VARCHAR}</if>
            <if test="updateUserLike != null and updateUserLike != '' ">AND update_user LIKE concat(#{updateUserLike,jdbcType=VARCHAR},'%')</if>
            <if test="updateUserName!=null and updateUserName!=''">AND update_user_name = #{updateUserName,jdbcType=VARCHAR}</if>
            <if test="updateUserNameLike != null and updateUserNameLike != '' ">AND update_user_name LIKE concat(#{updateUserNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="isDeleted!=null">AND is_deleted = #{isDeleted,jdbcType=BOOLEAN}</if>
            <if test="isDeletedList != null and isDeletedList.size > 0">
                <foreach item="item" separator="," open="AND is_deleted in (" close=")" collection="isDeletedList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
        </where>
        <choose>
            <when test="order!=null and orderBy!=null and order!='' and orderBy!=''">order by ${orderBy} ${order}</when>
            <otherwise>order by id desc</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into tc_retrying (
            id,
            batch_no,
            error_code,
            error_msg,
            delete_flag,
            doing_type,
            doing_type_name,
            final_result,
            retry_count,
            content,
            trade_scene_no,
            create_time,
            create_user,
            create_user_name,
            update_time,
            update_user,
            update_user_name,
            is_deleted        )
        values
        <foreach collection="modelList" item="bean" index="index" separator=",">
        (
            #{bean.id,jdbcType=BIGINT} ,
            #{bean.batchNo,jdbcType=VARCHAR} ,
            #{bean.errorCode,jdbcType=VARCHAR} ,
            #{bean.errorMsg,jdbcType=VARCHAR} ,
            #{bean.deleteFlag,jdbcType=TINYINT} ,
            #{bean.doingType,jdbcType=TINYINT} ,
            #{bean.doingTypeName,jdbcType=VARCHAR} ,
            #{bean.finalResult,jdbcType=TINYINT} ,
            #{bean.retryCount,jdbcType=INTEGER} ,
            #{bean.content,jdbcType=LONGVARCHAR} ,
            #{bean.tradeSceneNo,jdbcType=VARCHAR} ,
            #{bean.createTime,jdbcType=TIMESTAMP} ,
            #{bean.createUser,jdbcType=VARCHAR} ,
            #{bean.createUserName,jdbcType=VARCHAR} ,
            #{bean.updateTime,jdbcType=TIMESTAMP} ,
            #{bean.updateUser,jdbcType=VARCHAR} ,
            #{bean.updateUserName,jdbcType=VARCHAR} ,
            #{bean.isDeleted,jdbcType=BOOLEAN}         )
        </foreach>
    </insert>

        <select id="selectByBatchNo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM tc_retrying
        WHERE  batch_no = #{batchNo,jdbcType=VARCHAR}
    </select>
    
</mapper>